/* Generic sizing functions
 * 
 * Bigfoot uses a scale where 1em = 10px. To prevent bugs involving nested
 * elements, e.g., li li, we use rem instead of em as our preferred unit, and
 * use px as a fallback. Sizes are specified without a unit.
 */
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@function to-rems($num) {
  $stripped: strip-unit($num);
  @return #{$stripped/10}rem;
}

@mixin bf-size($prop, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: nth($values, $i);
    $pxValue: $value;
    $remValue: $value;

    @if type-of($value) == "number" {
      $pxValue: #{strip-unit($value)}px;
      $remValue: to-rems($value);
    }
    $pxValues: #{$pxValues + $pxValue};
    $remValues: #{$remValues + $remValue};
    @if $i < $max {
      $pxValues: #{$pxValues + " "};
      $remValues: #{$remValues + " "};
    }
  } 

  #{$prop}: $pxValues; 
  #{$prop}: $remValues; 
}

/* Convenience functions for common sizing scenarios */

@mixin bf-font-size($size) { @include bf-size(font-size, $size); }

@mixin bf-padding($values...) {
  @include bf-size(padding, $values...);
}

@mixin bf-margin($values...) {
  @include bf-size(margin, $values...);
}

@mixin bf-width($width) {
  @include bf-size(width, $width);
}

@mixin bf-line-height($height) {
  @include bf-size(line-height, $height);
}

@mixin bf-border-radius($radius) {
  $radiusRems: to-rems($radius);

  -webkit-border-radius:  $radiusRems;
     -moz-border-radius:  $radiusRems;
          border-radius:  $radiusRems;
}

@mixin bf-box-shadow($shadow) {
  $max: length($shadow) - 1;
  $shadowRems: '';
  @for $i from 1 through $max {
    $value: to-rems(nth($shadow, $i));
    $shadowRems: #{$shadowRems + $value + " "};
  }
  $shadowRems: #{$shadowRems + nth($shadow, $max+1)};

  -webkit-box-shadow: $shadowRems;
     -moz-box-shadow: $shadowRems;
          box-shadow: $shadowRems;
}

@mixin clearfix {
  *zoom: 1;

  &:before,
  &:after {
    display: table;
    content: "";
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}

@mixin text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}